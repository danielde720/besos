create table "public"."orders" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text default ''::text,
    "items" jsonb,
    "total" numeric,
    "status" text default ''::text,
    "pickup_time" timestamp with time zone,
    "user_phone_number" text
);


alter table "public"."orders" enable row level security;

CREATE UNIQUE INDEX orders_pkey ON public.orders USING btree (id);

alter table "public"."orders" add constraint "orders_pkey" PRIMARY KEY using index "orders_pkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.debug_auth_role(dummy json DEFAULT '{}'::json)
 RETURNS text
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
BEGIN
  RETURN current_role;
END;
$function$
;

CREATE OR REPLACE FUNCTION public.get_current_role()
 RETURNS text
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
BEGIN
  RETURN current_user;
END;
$function$
;

create policy "allow anyone to insert orders"
on "public"."orders"
as permissive
for insert
to anon
with check (true);




